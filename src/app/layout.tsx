import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import Header from "@/components/Header/page";
import Footer from "@/components/Footer/page";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const modicaBold = localFont({
  src: [
    {
      path: "../assets/modica/modica_bold.otf",
    },
  ],
  variable: "--font-modica-bold",
});
const modicaRegular = localFont({
  src: [
    {
      path: "../assets/modica/modica-regular.otf",
    },
  ],
  variable: "--font-modica-regular",
});
const modicaLight = localFont({
  src: [
    {
      path: "../assets/modica/modica-light.otf",
    },
  ],
  variable: "--font-modica-light",
});
const modicaLightItalic = localFont({
  src: [
    {
      path: "../assets/modica/modica-light-italic.otf",
    },
  ],
  variable: "--font-modica-light-italic",
});

const modicaMedium = localFont({
  src: [
    {
      path: "../assets/modica/modica-medium.otf",
    },
  ],
  variable: "--font-modica-medium",
});
const modicaSemibold = localFont({
  src: [
    {
      path: "../assets/modica/modica_semiBold.otf",
    },
  ],
  variable: "--font-modica-semibold",
});
const sfproRegular = localFont({
  src: [
    {
      path: "../assets/sf-pro/SF-Pro-Regular.woff2",
    },
  ],
  variable: "--font-sfpro-regular",
});
const sfproLight = localFont({
  src: [
    {
      path: "../assets/sf-pro/SF-Pro-Light.woff2",
    },
  ],
  variable: "--font-sfpro-light",
});
const sfproMedium = localFont({
  src: [
    {
      path: "../assets/sf-pro/SF-Pro-medium.woff",
    },
  ],
  variable: "--font-sfpro-medium",
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`bg-black ${sfproRegular.variable} ${modicaLightItalic.variable} ${modicaLight.variable}  ${modicaRegular.variable} ${modicaSemibold.variable} ${modicaBold.variable} ${modicaMedium.variable} ${sfproRegular.variable} $ ${sfproLight.variable} ${sfproMedium.variable} antialiased`}
      >
        <Header />
        {children}
        <Footer />
      </body>
    </html>
  );
}
